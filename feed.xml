<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DrakeJin</title>
    <description>세상을 재미있게 만들기 위한 기술</description>
    <link>http://blog.drakejin.me/</link>
    <atom:link href="http://blog.drakejin.me/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 01 Jan 2018 22:47:55 +0900</pubDate>
    <lastBuildDate>Mon, 01 Jan 2018 22:47:55 +0900</lastBuildDate>
    <generator>Jekyll v3.6.2</generator>
    
      <item>
        <title>ES5 사용자 ES8을 만나다. Cheat Sheet</title>
        <description>&lt;h3 id=&quot;주의&quot;&gt;주의&lt;/h3&gt; &lt;p&gt;이 블로그의 내용은 대단히 주관적인 내용이 가득합니다. 그리고 &lt;code class=&quot;highlighter-rouge&quot;&gt;양질의 글&lt;/code&gt;을 읽었지만 &lt;code class=&quot;highlighter-rouge&quot;&gt;똥글&lt;/code&gt;이 나오는건 제 미숙함 때문입니다. 그럼에도 불구하고 피드백 많이 주신다면 자세히 조사하여 반영하도록 하겠습니다. 또한.. 가능한 링크로 올려놓은 자료들은 반드시 열어보시기 바랍니다. 분명 도움이 될 것입니다. (- -)(_ _)&lt;/p&gt; &lt;h1 id=&quot;intro&quot;&gt;intro&lt;/h1&gt; &lt;p&gt;내가 쓸때는 ES5 문법 밖에 없었는데… 정신차리고 보니 ES8을 모르고서 개발문서를 읽기가 힘들어 졌다. 지어 예제 코드를 문법모르고 사용하는 일도 부지기수로 늘어나게 되었다. 사실 자바스크립트도 jQuey만 열심히 돌려봤지 프로토타입따위 만져본적 없고 남이 만들어준것만 써봤다. 하지만 어느날 나는 react를 해야했고, &lt;code class=&quot;highlighter-rouge&quot;&gt;객체지향프로그래밍&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;MVC 패턴&lt;/code&gt;이 우주최고의 패턴인줄만 알았는데 &lt;code class=&quot;highlighter-rouge&quot;&gt;함수형프로그래밍&lt;/code&gt;프로그래밍이 나오고 &lt;code class=&quot;highlighter-rouge&quot;&gt;Flux 패턴&lt;/code&gt;이 나왔다....</description>
        <pubDate>Mon, 25 Dec 2017 00:00:00 +0900</pubDate>
        <link>http://blog.drakejin.me/ES5-User-Meet-ES8/</link>
        <guid isPermaLink="true">http://blog.drakejin.me/ES5-User-Meet-ES8/</guid>
        
        <category>javascript</category>
        
        <category>functional</category>
        
        
        <category>javascript</category>
        
      </item>
    
      <item>
        <title>flex 에 대해서 알아보자</title>
        <description>&lt;h1 id=&quot;주의&quot;&gt;주의&lt;/h1&gt; &lt;p&gt;이 블로그의 내용은 대단히 주관적인 내용으로써, 양질의 글을 읽었지만 똥글이 나오는건 제가 미숙하기 때문입니다. 그럼에도 불구하고 피드백 많이 주신다면 자세히 읽고 검토해서 반영하도록 하겠습니다. 감사하겠습니다.&lt;/p&gt; &lt;h1 id=&quot;intro&quot;&gt;intro&lt;/h1&gt; &lt;p&gt;http://flexboxfroggy.com/#ko&lt;/p&gt; &lt;p&gt;읽기전에 위 링크에 있는 튜토리얼을 먼저 하고나서 글을 보면 좋을것 같다. &lt;a href=&quot;https://teamtreehouse.com&quot;&gt;treehouse&lt;/a&gt;에서 만든 튜토리얼로 flex를 이해하는데 이걸로 잠깐 써보면 어느정도 감이 잡히지 않을까 싶다.&lt;/p&gt; &lt;h1 id=&quot;왜-flex를-쓸까&quot;&gt;왜 flex를 쓸까?&lt;/h1&gt; &lt;p&gt;float: left, right를 하고 픽셀을 퍼센트로 고정시키거나 display:inline-block으로 mobile web 처럼 보이는 UI/UX를 구현할 수 있다. 하지만, flex를 이용해서 UI를 짜면 더 &lt;code class=&quot;highlighter-rouge&quot;&gt;쉽다&lt;/code&gt;. 심지어 반응형웹에도 쉽게 만들어낼 수 있는 마법의 속성이다.&lt;/p&gt; &lt;p&gt;일반적으로 flex 이전의 것들은 텍스트 중심의 block들을 제어하기위한 속성들이지만,...</description>
        <pubDate>Sun, 17 Dec 2017 00:00:00 +0900</pubDate>
        <link>http://blog.drakejin.me/Css-Flex/</link>
        <guid isPermaLink="true">http://blog.drakejin.me/Css-Flex/</guid>
        
        <category>css</category>
        
        <category>flex</category>
        
        
        <category>css</category>
        
      </item>
    
      <item>
        <title>ReactJS의 Virtual DOM과 Repaint, Reflow</title>
        <description>&lt;h3 id=&quot;주의&quot;&gt;주의&lt;/h3&gt; &lt;p&gt;이 블로그의 내용은 대단히 주관적인 내용이 가득합니다. 그리고 &lt;code class=&quot;highlighter-rouge&quot;&gt;양질의 글&lt;/code&gt;을 읽었지만 &lt;code class=&quot;highlighter-rouge&quot;&gt;똥글&lt;/code&gt;이 나오는건 제 미숙함 때문입니다. 그럼에도 불구하고 피드백 많이 주신다면 자세히 조사하여 반영하도록 하겠습니다. 또한.. 가능한 링크로 올려놓은 자료들은 반드시 열어보시기 바랍니다. 분명 도움이 될 것입니다. (- -)(_ _)&lt;/p&gt; &lt;h1 id=&quot;react는-왜-존재하는가&quot;&gt;React는 왜 존재하는가?&lt;/h1&gt; &lt;p&gt;큰 SPA(Single Page Application) 또는 Dynamic UI 의 웹 페이지를 만들기 위해서&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;&lt;strong&gt;We built React to solve one problem: building large applications with data that changes over time.&lt;/strong&gt; 출처 : https://github.com/mikrofusion/react/blob/38818189a518fe307681915995177f748e2115ba/docs/docs/01-why-react.md&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;**SPA: Single Page Application : 페이지 전환없이 서비스를 이용할 수 있는 애플리케이션 UI를 말한다. Dynamic UI의 성격이 강하다.&lt;/p&gt; &lt;h3...</description>
        <pubDate>Sat, 16 Dec 2017 00:00:00 +0900</pubDate>
        <link>http://blog.drakejin.me/React-VirtualDOM-And-Repaint-Reflow/</link>
        <guid isPermaLink="true">http://blog.drakejin.me/React-VirtualDOM-And-Repaint-Reflow/</guid>
        
        <category>javascript</category>
        
        <category>react</category>
        
        <category>virtualDOM</category>
        
        
        <category>reactjs</category>
        
      </item>
    
  </channel>
</rss>
